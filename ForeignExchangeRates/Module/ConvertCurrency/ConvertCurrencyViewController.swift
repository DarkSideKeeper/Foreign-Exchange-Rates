//
//  ConvertCurrencyViewController.swift
//  ForeignExchangeRates
//
//  Created Titipan Sakunwongsalee on 17/9/2562 BE.
//  Copyright © 2562 Titipan Sakunwongsalee. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class ConvertCurrencyViewController: UIViewController, ConvertCurrencyViewProtocol {

	var presenter: ConvertCurrencyPresenterProtocol?
    
    @IBOutlet var pickerCurrentCurrency: UIPickerView!
    @IBOutlet var pickerToCurrency: UIPickerView!
    @IBOutlet var textFieldAmount: UITextField!
    
	override func viewDidLoad() {
        super.viewDidLoad()
        
        setupView()
    }
    
    func setupView() {
        pickerCurrentCurrency.delegate = self
        pickerCurrentCurrency.dataSource = self
        pickerToCurrency.delegate = self
        pickerToCurrency.dataSource = self
    }
    
    @IBAction func clickBtnCalculate(_ sender: Any) {
        showAlertResult(data: 99)
    }
    
    @IBAction func closeView(_ sender: Any) {
        dismiss(animated: true, completion: nil)
    }
    
    func showAlertResult(data: Int) {
        let alert = UIAlertController(title: "0.97 USD1", message: "1 THB equals to 0.03 USD1", preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "OK", style: .default, handler: { action in
            switch action.style{
            case .default:
                print("default")
            case .cancel:
                break
            case .destructive:
                break
            @unknown default:
                break
            }}))
        present(alert, animated: true, completion: nil)
    }

}

extension ConvertCurrencyViewController: UIPickerViewDelegate, UIPickerViewDataSource {
    func numberOfComponents(in pickerView: UIPickerView) -> Int {
        return 1
    }
    
    func pickerView(_ pickerView: UIPickerView, numberOfRowsInComponent component: Int) -> Int {
        return presenter?.getListRates().count ?? 0
    }
    
    func pickerView(_ pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -> String? {
        guard let list = presenter?.getListRates() else { return nil }
        return list[row]
    }
    
    func pickerView(_ pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int) {
        if pickerView == pickerCurrentCurrency {
            
        } else {
            
        }
    }
}
