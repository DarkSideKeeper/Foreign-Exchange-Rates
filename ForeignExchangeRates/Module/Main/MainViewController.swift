//
//  MainViewController.swift
//  ForeignExchangeRates
//
//  Created Titipan Sakunwongsalee on 16/9/2562 BE.
//  Copyright © 2562 Titipan Sakunwongsalee. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class MainViewController: UIViewController, MainViewProtocol {

	var presenter: MainPresenterProtocol?

    @IBOutlet var navigationBar: UINavigationBar!
    @IBOutlet var tableView: UITableView!
    @IBOutlet var btnConvert: UIButton!
    @IBOutlet var btnLanguage: UIButton!
    @IBOutlet var lbName: UILabel!
    @IBOutlet var lbBuyPrice: UILabel!
    @IBOutlet var lbSellPrice: UILabel!
    
    var listRate: [ExchangeRatesModel] = [] {
        didSet {
            tableView.reloadData()
        }
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()

        setupView()
    }
    
    func setupView() {
        navigationBar.topItem?.title = "Text_Main_Title".localized
        
        lbName.text = "Text_Currency".localized
        lbBuyPrice.text = "Text_Buying".localized
        lbSellPrice.text = "Text_Selling".localized
        btnConvert.setTitle("Btn_Currency_Calculator".localized, for: .normal)
        btnLanguage.setImage(UIImage(named: GBM.shared.getLanguage() == .en ? "icon_th" : "icon_us"), for: .normal)
        
        tableView.register(UINib(nibName: ExchangeRateCell.nibName, bundle: nil), forCellReuseIdentifier: ExchangeRateCell.identifier)
        tableView.tableFooterView = UIView()
        
        presenter?.getExchangeRates()
    }
    
    func updateView() {
        setupView()
        tableView.reloadData()
    }
    
    func showListExchangeRates(model: [ExchangeRatesModel]) {
        listRate = model
    }
    
    @IBAction func clickBtnConvert(_ sender: Any) {
        presenter?.showConvertView(model: listRate)
    }
    
    @IBAction func clickChangeLanguage(_ sender: UIButton) {
        if GBM.shared.getLanguage() == .en {
            GBM.shared.setLanguage(language: .th)
        } else {
            GBM.shared.setLanguage(language: .en)
        }
        updateView()
    }
}

extension MainViewController: UITableViewDelegate, UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return listRate.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: ExchangeRateCell.identifier) as! ExchangeRateCell
        cell.setupCell(model: listRate[indexPath.row])
        
        return cell
    }
}
